./mongod --dbpath ~/mongo-data -- starts db
./mongo starts sever and check - the shell
db.Todos.insert({text:'film new node course' })
db.Todos.find()

robomongo - UI tool
- collection -> document -> field

node mongodb-native

npm install mongodb@2.2.5 --save

// object destructuring - pull out items form obejcts and set them to variables
var {x} = {x:'asdasd', y:'adsdas'}

//git init
git remote add origin git@github.com:katkinso/node-course-2-todo-api.git
git push -u origin master

//mongoose - ORM
lib allows structure of data
certain properties, validation etc
instead of using mongo native driver

// TESTINg
- expect - for assertions
- mocha - testsuiet
- supertest - for routes

//deploy to heroku
const port = process.env.PORT || 3000 //setting port for heroku //server.js
"scripts": { //pakcage.json
  "start": "node server/server.js",

//Version of node
"engines":{
  "node":"v8.5.0"
},

//Create new herkou app
Heroku create
> https://warm-ridge-59744.herokuapp.com/ | https://git.heroku.com/warm-ridge-59744.git

Set addon
heroku addons:create mongolab:sandbox

heroku config
=== warm-ridge-59744 Config Vars
MONGODB_URI: mongodb://heroku_fzbhg61c:b9n2lamnb832q6cfcea0pr4tdc@ds163301.mlab.com:63301/heroku_fzbhg61c

--SET TO use heroku mongo
mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/TodoApp')

-->git push
-->git push heroku master

HEROKU - LOGS
heroku logs



//new instance
// var newTodo = new Todo({
//   text:'Eat dinner',
//   completed: false,
//   completedAt: 1232
// })

// newTodo.save().then((doc) => {
//   console.log(`Saved todo ${doc}`)
//
// },(e) => {
//   console.log('unable to save todo')
// })



//set up new user
var newUser = new User({
  email:'kate@hooo.com'
})

//write to db
newUser.save().then((doc) => {
  console.log(`Saved user ${doc}`)
},(e) => {
  console.log('unable to save user')
})
